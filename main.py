import streamlit as st
from io import StringIO
from utils import EndPt, create_jwt_token, create_payload, send_push_notification

st.set_page_config(
    page_title="APNs Tester",
    page_icon=":material/mark_chat_unread:",
)

st.markdown(
    """
    ### :material/mark_chat_unread: &nbsp; Apple Push Notification Tester 

    > test Apple Push Notification with ease

    ![github](https://api.iconify.design/bi/github.svg?color=%236FD886&width=20) &nbsp;
    [source code](https://github.com/hoishing/apn-tester)
    """
)
st.write("")

st.write("#### APNs Configuration")

c1, c2 = st.columns(2)
bundle_id = c1.text_input("App Bundle ID")
team_id = c2.text_input(
    "Apple Team ID", help="see Apple Developer website ‚Üí Membership details"
)

c3, c4 = st.columns(2)
key_id = c4.text_input(
    "APNs Key ID",
    help="see Apple Developer website ‚Üí Certificates, IDs & Profiles ‚Üí Keys",
)
endpoint = c3.radio(
    "APNs Endpoint",
    options=EndPt._member_names_,
    horizontal=True,
)

device_tokens = st.text_area(
    "Device Token(s)",
    placeholder="accept multiple tokens, one token per line",
    help="""
        below is the code snippet to get the device token in string, see the [docs] for details

        ```swift
        // Get the device token
        func application(_ application: UIApplication, didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {
            let pushToken = deviceToken.map { String(format: "%02.2hhx", $0) }.joined()
            print("Device Token: \(pushToken)")
        }
        ```

        [docs]: https://developer.apple.com/documentation/usernotifications/registering-your-app-with-apns
    """,
)

uploaded_file = st.file_uploader(
    "APNs Auth Key file(.p8)",
    type="p8",
    help="the `.p8` private key file generated by Apple when registering a new APNs key",
)
if uploaded_file:
    auth_key = StringIO(uploaded_file.getvalue().decode("utf-8")).read()

st.write("#### Payload Content")

c5, c6 = st.columns(2)
title = c5.text_input("Title", value="Hi there! üëã")
subtitle = c6.text_input("Subtitle", value="Test push notification üí®")
body = st.text_input("Body", value="This is a test message from APNs Tester üöÄ")
userInfo = st.text_input(
    "userInfo",
    value="any additional data",
    help="see the [docs](https://developer.apple.com/documentation/usernotifications/generating-a-remote-notification#Create-the-JSON-payload) for details",
)

# if st.form_submit_button("Send Push Notification"):
if st.button("Send Push Notification"):

    payload = create_payload(title, subtitle, body, userInfo)
    jwt_token = create_jwt_token(auth_key, team_id, key_id)

    for device_token in device_tokens.split():
        response = send_push_notification(
            bundle_id, device_token, EndPt[endpoint], payload, jwt_token
        )

        if response.status_code == 200:
            st.write(f"‚úÖ Notification sent: {device_token}")
        else:
            st.write(f"‚ö†Ô∏è Failed: {device_token}")
